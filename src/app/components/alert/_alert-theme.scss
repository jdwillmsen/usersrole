@use 'sass:map';
@use '@angular/material' as mat;

@mixin color($theme) {
    $color-config: mat.get-color-config($theme);
    $primary-palette: map.get($color-config, 'primary');
    $accent-palette: map.get($color-config, 'accent');
    $warn-palette: map.get($theme, 'warn');
    $error-palette: map.get($theme, 'error');
    $success-palette: map.get($theme, 'success');
    $info-palette: map.get($theme, 'info');

    $primary-color: mat.get-color-from-palette($primary-palette, default);
    $accent-color: mat.get-color-from-palette($accent-palette, default);
    $warn-color: mat.get-color-from-palette($warn-palette, default);
    $error-color: mat.get-color-from-palette($error-palette, default);
    $success-color: mat.get-color-from-palette($success-palette, default);
    $info-color: mat.get-color-from-palette($info-palette, default);

    $primary-color-contrast: mat.get-color-from-palette($primary-palette, default-contrast);
    $accent-color-contrast: mat.get-color-from-palette($accent-palette, default-contrast);
    $warn-color-contrast: mat.get-color-from-palette($warn-palette, default-contrast);
    $error-color-contrast: mat.get-color-from-palette($error-palette, default-contrast);
    $success-color-contrast: mat.get-color-from-palette($success-palette, default-contrast);
    $info-color-contrast: mat.get-color-from-palette($info-palette, default-contrast);

    .alert {

        &.primary {
            background-color: $primary-color;
            color: $primary-color-contrast;
        }

        &.accent {
            background-color: $accent-color;
            color: $accent-color-contrast;
        }

        &.warn {
            background-color: $warn-color;
            color: $warn-color-contrast;
        }

        &.error {
            background-color: $error-color;
            color: $error-color-contrast;
        }

        &.info {
            background-color: $info-color;
            color: $info-color-contrast;
        }

        &.success {
            background-color: $success-color;
            color: $success-color-contrast;
        }
    }
}

@mixin typography($theme) {
    $typography-config: mat.get-typography-config($theme);
}

@mixin theme($theme) {
    $color-config: mat.get-color-config($theme);

    @if $color-config !=null {
        @include color($theme);
    }

    $typography-config: mat.get-typography-config($theme);

    @if $typography-config !=null {
        @include typography($theme);
    }
}