@use 'sass:map';
@use '@angular/material' as mat;

@mixin color($theme) {
    $color-config: mat.get-color-config($theme);
    $primary-palette: map.get($color-config, 'primary');
    $accent-palette: map.get($color-config, 'accent');
    $warn-palette: map.get($theme, 'warn');
    $error-palette: map.get($theme, 'error');
    $success-palette: map.get($theme, 'success');
    $info-palette: map.get($theme, 'info');

    $primary-color: mat.get-color-from-palette($primary-palette, default);
    $accent-color: mat.get-color-from-palette($accent-palette, default);
    $warn-color: mat.get-color-from-palette($warn-palette, default);
    $error-color: mat.get-color-from-palette($error-palette, default);
    $success-color: mat.get-color-from-palette($success-palette, default);
    $info-color: mat.get-color-from-palette($info-palette, default);

    $primary-color-contrast: mat.get-color-from-palette($primary-palette, default-contrast);
    $accent-color-contrast: mat.get-color-from-palette($accent-palette, default-contrast);
    $warn-color-contrast: mat.get-color-from-palette($warn-palette, default-contrast);
    $error-color-contrast: mat.get-color-from-palette($error-palette, default-contrast);
    $success-color-contrast: mat.get-color-from-palette($success-palette, default-contrast);
    $info-color-contrast: mat.get-color-from-palette($info-palette, default-contrast);

    @include variant($primary-color, 'primary', $primary-color-contrast);
    @include variant($accent-color, 'accent', $accent-color-contrast);
    @include variant($warn-color, 'warn', $warn-color-contrast);
    @include variant($error-color, 'error', $error-color-contrast);
    @include variant($success-color, 'success', $success-color-contrast);
    @include variant($info-color, 'info', $info-color-contrast);
}

@mixin typography($theme) {
    $typography-config: mat.get-typography-config($theme);
}

@mixin theme($theme) {
    $color-config: mat.get-color-config($theme);

    @if $color-config !=null {
        @include color($theme);
    }

    $typography-config: mat.get-typography-config($theme);

    @if $typography-config !=null {
        @include typography($theme);
    }
}

@mixin variant($color, $type, $color-contrast) {

    .mdc-button.mat-#{$type},
    .mat-mdc-stroked-button.mat-#{$type} {
        color: $color;
        --mat-mdc-button-persistent-ripple-color: #{$color};
        --mat-mdc-button-ripple-color: #{rgba($color, 0.1)};
    }

    .mat-mdc-unelevated-button.mat-#{$type}:hover,
    .mat-mdc-raised-button.mat-#{$type}:hover {
        color: $color-contrast;
        background-color: $color;
    }

    .mat-mdc-unelevated-button:not(:disabled, :hover).mat-#{$type},
    .mat-mdc-raised-button.mat-#{$type},
    .mat-mdc-fab:not(:disabled).mat-#{$type},
    .mat-mdc-mini-fab:not(:disabled).mat-#{$type} {
        color: $color-contrast;
        background-color: $color;
    }

    .mat-mdc-icon-button.mat-#{$type} {
        color: $color;
        --mat-mdc-button-persistent-ripple-color: #{$color};
        --mat-mdc-button-ripple-color: #{rgba($color, 0.1)};
    }
}